name: Test AnalyserTransactions

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        run: |
          docker version
          docker compose version  # Verify Docker and Docker Compose are available

      - name: Create docker/.env file
        run: |
          mkdir -p docker
          cat << EOF > docker/.env
          REDIS_URL=redis://redis:6379/0
          CELERY_BROKER_URL=redis://redis:6379/0
          CELERY_RESULT_BACKEND=redis://redis:6379/0
          POSTGRES_USER=postgres
          POSTGRES_PASSWORD=postgres
          POSTGRES_DB=analyzer
          POSTGRES_TABLE_SWAP=swap_txs
          DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/analyzer
          LOG_LEVEL=DEBUG
          INFURA_KEY=${{ secrets.INFURA_KEY }}
          EOF

      - name: Build Docker containers using Docker Compose
        run: |
          docker compose -f docker/docker_compose.yml -p test_pool build

      - name: Run Docker Compose containers
        run: |
          docker compose -f docker/docker_compose.yml -p test_pool up -d

      - name: Wait for API to be ready
        run: |
          for i in {1..12}; do
            if docker compose -f docker/docker_compose.yml -p test_pool exec -T api curl -s http://localhost:8001/tasks/health_redis | grep "healthy"; then
              echo "API is ready!"
              break
            fi
            echo "Waiting for API to be ready... (Attempt $i/12)"
            sleep 5
            if [ $i -eq 12 ]; then
              echo "API failed to start!"
              exit 1
            fi
          done

      - name: Install dependencies inside Docker container
        run: |
          docker compose -f docker/docker_compose.yml -p test_pool exec -T api pip install --upgrade pip
          docker compose -f docker/docker_compose.yml -p test_pool exec -T api pip install -r tests/requirements_test.txt

      - name: Run tests inside Docker container
        run: |
          docker compose -f docker/docker_compose.yml -p test_pool exec -T api pytest --disable-warnings --junitxml=/app/report.xml

      - name: Copy test report from container
        run: |
          docker cp $(docker compose -f docker/docker_compose.yml -p test_pool ps -q api):/app/report.xml ./report.xml

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report
          path: report.xml

      - name: Shut down Docker Compose services
        run: |
          docker compose -f docker/docker_compose.yml -p test_pool down --volumes